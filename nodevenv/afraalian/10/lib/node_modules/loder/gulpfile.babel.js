import 'babel-polyfill'
import gulp from 'gulp'
import rollup from 'gulp-rollup'
import babel from 'gulp-babel'
import buble from 'gulp-buble'
import del from 'del'
import path from 'path'
import chalk from 'chalk'
import build from './scripts/build'
import webpackStream from 'webpack-stream'
import webpackUglifyPlugin from 'webpack-uglify-js-plugin'

gulp.task('clean', cb => {
  del(['dist', 'lib']).then(() => cb())
})

// gulp.task('build:dist', ['clean'], () => {
//   return build()
// })

gulp.task('build:index', ['clean'], () => {
  return gulp
    .src('src/index.js')
    .pipe(
      webpackStream({
        module: {
          rules: [
            {
              test: /\.js$/,
              use: 'babel-loader',
              exclude: path.join(__dirname, 'node_modules')
            }
          ]
        },
        output: {
          filename: 'loder.umd.js',
          library: 'loder',
          libraryTarget: 'umd'
        },
        plugins: [
          new webpackUglifyPlugin({
            cacheFolder: '.tmp'
          })
        ]
      })
    )
    .pipe(gulp.dest('./dist'))
})

gulp.task('build:route', ['clean'], () => {
  return gulp
    .src('src/route.js')
    .pipe(
      webpackStream({
        module: {
          rules: [
            {
              test: /\.js$/,
              use: 'babel-loader',
              exclude: path.join(__dirname, 'node_modules')
            }
          ]
        },
        output: {
          filename: 'loderWithRoute.umd.js',
          library: 'loder',
          libraryTarget: 'umd'
        },
        plugins: [
          new webpackUglifyPlugin({
            cacheFolder: '.tmp'
          })
        ]
      })
    )
    .pipe(gulp.dest('./dist'))
})

gulp.task('build:dist', ['build:index', 'build:route'])

gulp.task('build:lib', ['clean'], () => {
  return gulp
    .src('./src/**/*.js')
    .pipe(
      // buble()
      babel({
        presets: ['es2015', 'stage-0'],
        sourceMaps: false
      })
    )
    .pipe(gulp.dest('./lib'))
})

gulp.task('default', ['build:dist', 'build:lib'])
